{"remainingRequest":"/Users/catherine_sun/Documents/CS degree/Projects/YunShangOA/YunShangOA_frontend/guigu-oa-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/catherine_sun/Documents/CS degree/Projects/YunShangOA/YunShangOA_frontend/guigu-oa-admin/src/views/system/sysRole/assignAuth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/catherine_sun/Documents/CS degree/Projects/YunShangOA/YunShangOA_frontend/guigu-oa-admin/src/views/system/sysRole/assignAuth.vue","mtime":1683559723168},{"path":"/Users/catherine_sun/Documents/CS degree/Projects/YunShangOA/YunShangOA_frontend/guigu-oa-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/catherine_sun/Documents/CS degree/Projects/YunShangOA/YunShangOA_frontend/guigu-oa-admin/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/catherine_sun/Documents/CS degree/Projects/YunShangOA/YunShangOA_frontend/guigu-oa-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/catherine_sun/Documents/CS degree/Projects/YunShangOA/YunShangOA_frontend/guigu-oa-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAnQC9hcGkvc3lzdGVtL3N5c01lbnUnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAncm9sZUF1dGgnLAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsIC8vIOeUqOadpeagh+ivhuaYr+WQpuato+WcqOS/neWtmOivt+axguS4reeahOagh+ivhiwg6Ziy5q2i6YeN5aSN5o+Q5LqkCiAgICAgIHN5c01lbnVMaXN0OiBbXSwgLy8g5omA5pyJCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGxhYmVsOiAnbmFtZScKICAgICAgfSwKICAgIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCkKICB9LAoKICBtZXRob2RzOiB7CiAgICAvKgogICAg5Yid5aeL5YyWCiAgICAqLwogICAgZmV0Y2hEYXRhKCkgewogICAgICBjb25zdCByb2xlSWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5pZAogICAgICBhcGkudG9Bc3NpZ24ocm9sZUlkKS50aGVuKHJlc3VsdCA9PiB7CiAgICAgICAgY29uc3Qgc3lzTWVudUxpc3QgPSByZXN1bHQuZGF0YQogICAgICAgIHRoaXMuc3lzTWVudUxpc3QgPSBzeXNNZW51TGlzdAogICAgICAgIGNvbnN0IGNoZWNrZWRJZHMgPSB0aGlzLmdldENoZWNrZWRJZHMoc3lzTWVudUxpc3QpCiAgICAgICAgY29uc29sZS5sb2coJ2dldFBlcm1pc3Npb25zKCkgY2hlY2tlZElkcycsIGNoZWNrZWRJZHMpCiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldENoZWNrZWRLZXlzKGNoZWNrZWRJZHMpCiAgICAgIH0pCiAgICB9LAoKICAgIC8qCiAgICDlvpfliLDmiYDmnInpgInkuK3nmoRpZOWIl+ihqAogICAgKi8KICAgIGdldENoZWNrZWRJZHMgKGF1dGhzLCBpbml0QXJyID0gW10pIHsKICAgICAgcmV0dXJuIGF1dGhzLnJlZHVjZSgocHJlLCBpdGVtKSA9PiB7CiAgICAgICAgaWYgKGl0ZW0uc2VsZWN0ICYmIGl0ZW0uY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICBwcmUucHVzaChpdGVtLmlkKQogICAgICAgIH0gZWxzZSBpZiAoaXRlbS5jaGlsZHJlbikgewogICAgICAgICAgdGhpcy5nZXRDaGVja2VkSWRzKGl0ZW0uY2hpbGRyZW4sIGluaXRBcnIpCiAgICAgICAgfQogICAgICAgIHJldHVybiBwcmUKICAgICAgfSwgaW5pdEFycikKICAgIH0sCgogICAgLyoKICAgIOS/neWtmOadg+mZkOWIl+ihqAogICAgKi8KICAgIHNhdmUoKSB7CiAgICAgIC8v6I635Y+W5Yiw5b2T5YmN5a2Q6IqC54K5CiAgICAgIC8vY29uc3QgY2hlY2tlZE5vZGVzID0gdGhpcy4kcmVmcy50cmVlLmdldENoZWNrZWROb2RlcygpCiAgICAgIC8v6I635Y+W5Yiw5b2T5YmN5a2Q6IqC54K55Y+K54i26IqC54K5CiAgICAgIGNvbnN0IGFsbENoZWNrZWROb2RlcyA9IHRoaXMuJHJlZnMudHJlZS5nZXRDaGVja2VkTm9kZXMoZmFsc2UsIHRydWUpOwogICAgICBsZXQgaWRMaXN0ID0gYWxsQ2hlY2tlZE5vZGVzLm1hcChub2RlID0+IG5vZGUuaWQpOwogICAgICBjb25zb2xlLmxvZyhpZExpc3QpCiAgICAgIGxldCBhc3NnaW5NZW51Vm8gPSB7CiAgICAgICAgcm9sZUlkOiB0aGlzLiRyb3V0ZS5xdWVyeS5pZCwKICAgICAgICBtZW51SWRMaXN0OiBpZExpc3QKICAgICAgfQogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgIGFwaS5kb0Fzc2lnbihhc3NnaW5NZW51Vm8pLnRoZW4ocmVzdWx0ID0+IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXN1bHQuJG1lc3NhZ2UgfHwgJ+WIhumFjeadg+mZkOaIkOWKnycpCiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9zeXN0ZW0vc3lzUm9sZScpOwogICAgICB9KQogICAgfQogIH0KfTsK"},{"version":3,"sources":["assignAuth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"assignAuth.vue","sourceRoot":"src/views/system/sysRole","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div style=\"padding: 20px 20px 0 20px;\">\n      授权角色：{{ $route.query.roleName }}\n    </div>\n    <el-tree\n      style=\"margin: 20px 0\"\n      ref=\"tree\"\n      :data=\"sysMenuList\"\n      node-key=\"id\"\n      show-checkbox\n      default-expand-all\n      :props=\"defaultProps\"\n    />\n    <div style=\"padding: 20px 20px;\">\n      <el-button :loading=\"loading\" type=\"primary\" icon=\"el-icon-check\" size=\"mini\" @click=\"save\">保存</el-button>\n      <el-button @click=\"$router.push('/system/sysRole')\" size=\"mini\" icon=\"el-icon-refresh-right\">返回</el-button>\n    </div>\n  </div>\n</template>\n<script>\n  import api from '@/api/system/sysMenu'\n  export default {\n    name: 'roleAuth',\n\n    data() {\n      return {\n        loading: false, // 用来标识是否正在保存请求中的标识, 防止重复提交\n        sysMenuList: [], // 所有\n        defaultProps: {\n          children: 'children',\n          label: 'name'\n        },\n      };\n    },\n\n    created() {\n      this.fetchData()\n    },\n\n    methods: {\n      /*\n      初始化\n      */\n      fetchData() {\n        const roleId = this.$route.query.id\n        api.toAssign(roleId).then(result => {\n          const sysMenuList = result.data\n          this.sysMenuList = sysMenuList\n          const checkedIds = this.getCheckedIds(sysMenuList)\n          console.log('getPermissions() checkedIds', checkedIds)\n          this.$refs.tree.setCheckedKeys(checkedIds)\n        })\n      },\n\n      /*\n      得到所有选中的id列表\n      */\n      getCheckedIds (auths, initArr = []) {\n        return auths.reduce((pre, item) => {\n          if (item.select && item.children.length === 0) {\n            pre.push(item.id)\n          } else if (item.children) {\n            this.getCheckedIds(item.children, initArr)\n          }\n          return pre\n        }, initArr)\n      },\n\n      /*\n      保存权限列表\n      */\n      save() {\n        //获取到当前子节点\n        //const checkedNodes = this.$refs.tree.getCheckedNodes()\n        //获取到当前子节点及父节点\n        const allCheckedNodes = this.$refs.tree.getCheckedNodes(false, true);\n        let idList = allCheckedNodes.map(node => node.id);\n        console.log(idList)\n        let assginMenuVo = {\n          roleId: this.$route.query.id,\n          menuIdList: idList\n        }\n        this.loading = true\n        api.doAssign(assginMenuVo).then(result => {\n          this.loading = false\n          this.$message.success(result.$message || '分配权限成功')\n          this.$router.push('/system/sysRole');\n        })\n      }\n    }\n  };\n</script>"]}]}